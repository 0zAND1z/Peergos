<project name="Peergos" default="dist" basedir=".">
  <description>
    Building Peergos
  </description>

  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>

  <path id="dep.runtime">
    <fileset dir="./lib">
        <include name="**/*.jar" />
    </fileset>
  </path>

  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value="-generateJsInteropExports -style Pretty -strict" />

  <!-- Configure path to GWT SDK -->
  <!--<property name="gwt.sdk" location="/home/ian/gwt-2.8.0-rc1" />-->
  <property name="gwt.sdk" location="gwt/gwt-2.8.0-rc3" />






  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <pathelement location="${gwt.sdk}/gwt-dev.jar"/>
    <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar"/>
    <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar"/>
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) here -->
    <pathelement location="lib/junit-4.11.jar"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
  </path>
  
  <target name="init">
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <javac includeantruntime="false" destdir="${build}" debug="true" debuglevel="lines,vars,source">
      <src>
	<pathelement location="${src}/peergos/shared"/>
	<pathelement location="${src}/peergos/server"/>
	<pathelement location="${src}/peergos/client"/>
      </src>
      <classpath>
	<fileset dir="lib">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <mkdir dir="${dist}/lib"/>
    <copy todir="${dist}/lib">
      <fileset dir="lib"/>
    </copy>
    <manifestclasspath property="manifest_cp" jarfile="myjar.jar">
      <classpath refid="dep.runtime" />
    </manifestclasspath>
    <jar jarfile="${dist}/PeergosServer.jar" basedir="${build}" includes="peergos/server/**,peergos/shared/**,peergos/client/**">
      <manifest>
	  <attribute name="Class-Path" value="${manifest_cp}"/>
	  <attribute name="Main-Class" value="peergos.server.Start"/>
      </manifest>
      <fileset dir=".">
	<include name="**/ui/**"/>
	<exclude name="out/**"/>
	<exclude name="ui/doppio/**"/>
	<exclude name="ui/PeergosServer.jar"/>
      </fileset>
    </jar>
    <jar jarfile="${dist}/PeergosClient.jar" basedir="${build}" includes="peergos/server/**,peergos/shared/**,peergos/client/**">
      <manifest>
	  <attribute name="Class-Path" value="${manifest_cp}"/>
      </manifest>
    </jar>
    <copy todir=".">
      <fileset file="${dist}/PeergosServer.jar"/>
    </copy>
    <copy todir="ui/">
      <fileset file="${dist}/PeergosClient.jar"/>
    </copy>
  </target>


  <target name="userTest" depends="compile,dist">
    <junit printsummary="yes" fork="true" haltonfailure="yes">
      <jvmarg value="-Xmx2g"/>
      <classpath>
	<pathelement location="lib/junit-4.11.jar" />
	<pathelement location="lib/hamcrest-core-1.3.jar" />
	<pathelement location="PeergosServer.jar" />
      </classpath>
      <test name="peergos.server.tests.UserTests" haltonfailure="yes">
	<formatter type="plain"/>
	<formatter type="xml"/>
      </test>
      </junit>
  </target>

  <target name="multiUserTests" depends="compile,dist">
    <junit printsummary="yes" fork="true" haltonfailure="yes">
      <jvmarg value="-Xmx2g"/>
      <classpath>
	<pathelement location="lib/junit-4.11.jar" />
	<pathelement location="lib/hamcrest-core-1.3.jar" />
	<pathelement location="PeergosServer.jar" />
      </classpath>
      <test name="peergos.server.tests.MultiUserTests" haltonfailure="yes">
	<formatter type="plain"/>
	<formatter type="xml"/>
      </test>
      </junit>
  </target>

  <target name="publicLinkTest" depends="compile,dist">
    <junit printsummary="yes" fork="true" haltonfailure="yes">
      <jvmarg value="-Xmx2g"/>
      <classpath>
	<pathelement location="lib/junit-4.11.jar" />
	<pathelement location="lib/hamcrest-core-1.3.jar" />
	<pathelement location="PeergosServer.jar" />
      </classpath>
      <test name="peergos.server.tests.UserPublicKeyLinkTests" haltonfailure="yes">
	<formatter type="plain"/>
	<formatter type="xml"/>
      </test>
      </junit>
  </target>

  <target name="fuseTest" depends="compile,dist">
    <junit printsummary="yes" fork="true" haltonfailure="yes">
      <jvmarg value="-Xmx2g"/>
      <classpath>
	<pathelement location="lib/junit-4.11.jar" />
	<pathelement location="lib/hamcrest-core-1.3.jar" />
	<pathelement location="PeergosServer.jar" />
      </classpath>
      <test name="peergos.server.tests.FuseTests" haltonfailure="yes">
	<formatter type="plain"/>
	<formatter type="xml"/>
      </test>
      </junit>
  </target>

  <target name="test" depends="compile,dist,userTest,multiUserTests,fuseTest,publicLinkTest">
  </target> 


  <!-- GWT stuff -->

  
  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
    <!-- Add any additional server libs that need to be copied -->
    <copy todir="war/WEB-INF/lib" file="lib/jnr-fuse-0.3-all.jar" />
    <copy todir="war/WEB-INF/lib" file="lib/orchid-1.0.0.jar" />
  </target>

  <target name="javac" depends="libs" description="Compile java source to bytecode">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.8" target="1.8" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler" maxmemory="512m">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="peergos.Peergos"/>
    </java>
  </target>

  <target name="devmode" depends="javac" description="Run development mode (pass -Dgwt.args=-nosuperDevMode to fallback to classic DevMode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode" maxmemory="1g">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/gwt-codeserver.jar"/>
      </classpath>
      <arg value="-startupUrl"/>
      <arg value="Peergos.html"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY, -logLevel DEBUG or -nosuperDevMode -->
      <arg line="${gwt.args}"/>
      <arg value="peergos.Peergos"/>
      <arg value="peergos.Peergos"/>
    </java>
  </target>
  
  <target name="clean" description="clean up">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
